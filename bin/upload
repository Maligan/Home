#!/bin/sh

CONFIG_FILE=".upload"
OPTIONS="--delete -irc"

task_id=()
task_group=()
task_option=()
task_source=()
task_dest=()

function help() {
	echo "Usage: '$0' [OPTIONS] [TARGET@]GROUP"
	echo "  -h        show this help"
	echo "  -n        perform dry-run"
	echo "  -f [FILE] use specified config file (default .rsync)"
	exit 0
}

function throw() {
	echo -e '\033[0;31m'$1'\033[0m'
	exit 1
}

function taskparse() {
	let task_number=0
	let line_number=0

	while read line
	do
		let line_number+=1
		if [[ $line =~ ^([[:alnum:]]+)@([[:alnum:]]+)[[:blank:]]+\((.*)[[:blank:]]-\>[[:blank:]](.*)\)$ ]]; then
			let task_number+=1
			task_id[$task_number]=${BASH_REMATCH[1]}
			task_group[$task_number]=${BASH_REMATCH[2]}
			task_source[$task_number]=${BASH_REMATCH[3]}
			task_dest[$task_number]=${BASH_REMATCH[4]}
		elif [[ $line =~ ([+-])[[:blank:]]+(.+) ]] && [[ $task_number ]]; then
			mode=${BASH_REMATCH[1]}
			pattern=${BASH_REMATCH[2]}
			if [[ $mode == "+" ]]; then option="--include"
			else option="--exclude"; fi
			task_option[$task_number]+="$option '$pattern' "
		elif [[ $line ]]; then
			throw "SYNTAX: $CONFIG_FILE ($line_number): $line"
		fi
	done < $CONFIG_FILE
}

function taskdo() {
	for ((i=1; i<=${#task_id[*]}; i++)); do
		group=${task_group[$i]}
		fullname=${task_id[$i]}@$group
		if [[ $1 == $group ]] || [[ $1 == $fullname ]]; then
			command="rsync $OPTIONS ${task_option[$i]} '${task_source[$i]}' ${task_dest[$i]}"
			echo -e '\033[0;32m'$command'\033[0m'
			eval $command
		fi
	done
}

# Start
while getopts "hnf:" opt; do
	case $opt in
		n) OPTIONS="$OPTIONS -n" ;;
		h) help ;;
		f) CONFIG_FILE=$OPTARG ;;
		*) exit ;;
	esac
done

taskparse

shift `expr $OPTIND - 1`
while test $# -gt 0; do
	taskdo $1
	shift
done
